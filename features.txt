Current renderer version: 0.1.0

Planned list of features for actual future versions:

Version 0.2.0 will feature
    - fully functioning unit test suite for comparing implementations
    - re-architectured version of the current codebase to convert all features
        to be plug-and-play style modules allowing for easy extension.

Version 0.3.0 will feature
    - MIS for standard path-tracing
    - incorporation of stats tracking using clocker.h

Version 0.4.0 will feature
    - Replace current scene description format with Pixar's Universal Scene 
        Descriptor (USD) format

Version 0.5.0 will feature
    - To be decided, probably incorporation of my recent research work.

Random list of features to add to the renderer

( zack's notes )
    "+" means that this is currently being worked on

a better system for organizing unit tests
clocker - automatic tests and performance recordings
Photon Mapping Acceleration Structures
Photon Mapping Integrator
parallelize the scatter photons method
Progressive Photon Mapping Integrator
Photon Beams Integrator
Photon Surfaces Integrator
Full Basic SDF support
Environment emitter sampling
Interpolation scheme support for scene variables
Path Tracing with (full) MIS
Spectral Rendering
NVIDIA Ray-Marching
Debiased Ray-Marching
Bidirectional Path Tracing
Integrate performance analysis everywhere
BSSRDFs
Dipole method
Directional Dipole method
Disney BSDF
SDF refractions
IES support
Easy to integrate Macros (dear zack from the past - what did this mean?)
Instanced Geometry - Need to look into embrees features
Subdivision Embree support
Import scenes from obj files (Maya + Blender)
UI for creating/editing scenes + scenegraphs
Fur rendering

Refactors:
    make clocker calls macros to hide the # declarations
    add a check to keep material shaders from being used as geometry shaders
    what the heck is a functor, and why did i make it
    create basic documentation

unit tests to create:
    Homogeneous medium
    Heterogeneous medium
    unit tests for all sdf intersection types
    unit tests for all sdf basic operations
    unit tests for sdf material interpolation
